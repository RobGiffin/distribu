{"version":3,"sources":["src/welcome/welcome.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/welcome.html","src/welcome/setup.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/setup.html","src/rti-transaction/rti-transaction-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/rti-transaction/rti-transaction-modal.html","src/resources/value-converters/short-date.js","src/resources/value-converters/long-date-time.js","src/resources/value-converters/format-salary.js","src/resources/value-converters/extract-id-from-link.js","src/resources/value-converters/extract-href.js","src/resources/value-converters/employee-name.js","src/resources/value-converters/bank-account.js","src/resources/value-converters/address.js","src/resources/index.js","src/resources/elements/validation-errors/validation-errors.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/validation-errors/validation-errors.html","src/resources/elements/status/status.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/status/status.html","src/resources/elements/rule-exclusions/rule-exclusions.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/rule-exclusions/rule-exclusions.html","src/resources/elements/router-progress-indicator/router-progress-indicator.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/router-progress-indicator/router-progress-indicator.html","src/resources/elements/request-indicator/request-indicator.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/request-indicator/request-indicator.html","src/resources/elements/pay-schedule-dropdown/pay-schedule-dropdown.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/pay-schedule-dropdown/pay-schedule-dropdown.html","src/resources/elements/coming-soon/coming-soon.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/coming-soon/coming-soon.html","src/resources/elements/breadcrumbs/breadcrumbs.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/breadcrumbs/breadcrumbs.html","src/resources/elements/bank-account-form/bank-account-form.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/bank-account-form/bank-account-form.html","src/resources/elements/api-errors/api-errors.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/api-errors/api-errors.html","src/resources/elements/address-form/address-form.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/address-form/address-form.html","src/pension/pension-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pension/pension-modal.html","src/pay-schedule/pay-schedule-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-schedule/pay-schedule-modal.html","src/pay-run/new-pay-run-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-run/new-pay-run-modal.html","src/pay-run/info-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-run/info-modal.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/TaxYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/StudentLoanYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/SspYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/SppYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/SmpYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/ShppYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/SapYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/PrimitiveYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/PensionYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/lists/NiYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/ytd-pay-instruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/TaxYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/StudentLoanYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/SspYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/SppYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/SmpYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/ShppYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/SapYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/PrimitiveYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/PensionYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/ytd-pay-instructions/forms/NiYtdPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/TaxPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/StudentLoanPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/SspPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/ShppPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/SalaryPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/RatePayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/PrimitivePayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/PensionPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/NiPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/NiAdjustmentPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/BenefitPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/lists/AoePayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/pay-instruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/TaxPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/StudentLoanPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/SspPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/SmpPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/ShppPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/SalaryPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/RatePayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/PrimitivePayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/PensionPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/NiPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/NiAdjustmentPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/BenefitPayInstruction.html","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instructions/forms/AoePayInstruction.html","src/pay-instruction/pay-instruction-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-instruction/pay-instruction-modal.html","src/pay-code/pay-code-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-code/pay-code-modal.html","src/main.js","src/job/job-details-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/job/job-details-modal.html","src/header/header.js","/Users/robertwaggott/Code/Me/payrun-demo/src/header/header.html","src/footer/footer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/footer/footer.html","src/environment.js","src/employer/list.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/list.html","src/employer/employer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/employer.html","src/employer/employer-form.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/employer-form.html","src/employee/employee.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employee/employee.html","src/employee/elements/p45-pay-instruction.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employee/elements/p45-pay-instruction.html","src/employee/elements/employee-form.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employee/elements/employee-form.html","src/dialogs/confirm.js","/Users/robertwaggott/Code/Me/payrun-demo/src/dialogs/confirm.html","src/base-view-model.js","src/app.js","/Users/robertwaggott/Code/Me/payrun-demo/src/app.html","src/api-calls/api-calls.js","/Users/robertwaggott/Code/Me/payrun-demo/src/api-calls/api-calls.html"],"names":["Welcome","activate","client","HttpClient","get","then","state","JSON","parse","data","response","deactivate","Setup","ValidationControllerFactory","Router","controllerFactory","router","controller","createForCurrentScope","environments","setupValidationRules","ValidationRules","ensure","required","withMessage","on","save","Environment","ConsumerKey","ConsumerSecret","validate","result","valid","post","navigate","$","animate","scrollTop","RtiTransactionModal","DialogController","dialogController","PayRun","payRuns","LateReason","Generate","Transmit","PayScheduleId","PayScheduleKey","PayRunId","PayRunKey","HoldingDate","employerId","parsedResponse","res","apiErrors","errors","ok","status","onLateReasonSelected","newValue","moment","ShortDateValueConverter","toView","value","format","LongDateTimeValueConverter","FormatSalaryValueConverter","obj","parseFloat","toFixed","ExtractIdFromLinkValueConverter","href","parts","split","length","ExtractHrefValueConverter","EmployeeNameValueConverter","employee","firstname","FirstName","Initials","Title","LastName","filter","part","undefined","trim","join","BankAccountValueConverter","account","AccountName","AccountNumber","SortCode","AddressValueConverter","address","Address1","Address2","Address3","Address4","Country","Postcode","configure","config","globalResources","ValidationErrors","errorsChanged","bindable","Status","EventAggregator","eventAggregator","ea","viewJob","publish","job","statusChanged","fadeIn","RuleExclusions","nprogress","RouterProgressIndicator","attached","processingSubscriber","subscribe","start","completeSubscriber","done","detached","dispose","RequestIndicator","visible","PayScheduleDropdown","ComingSoon","Breadcrumbs","navigationSubscriber","loadInstructions","parentInstructions","getParentInstructions","currentInstruction","instructions","slice","concat","getAllInstructions","instruction","includeInBreadcrumbs","title","navigateToRoute","name","params","arr","previousInstruction","routes","find","e","BankAccountForm","ApiErrors","AddressForm","addressChanged","PensionModal","validationController","proRataMethods","text","taxationMethods","PayScheduleModal","frequencies","Id","Key","Name","PayFrequency","NewPayRunModal","PaymentDate","StartDate","EndDate","EmployerId","InfoModal","viewEmployee","employeeId","PayInstructionModal","Promise","apiUrl","id","type","pi","resolve","url","getPayInstructionPartial","InstructionType","toLowerCase","indexOf","PayCodeModal","aurelia","use","standardConfiguration","plugin","PLATFORM","moduleName","useDefaults","settings","centerHorizontalOnly","feature","environment","debug","developmentLogging","testing","setRoot","JobDetailsModal","getJobInfo","window","setTimeout","Header","showApiCallsButton","auth","toggleAPICalls","GitHubButtons","Footer","showVersionInfo","render","List","DialogService","dialogService","getEmployers","employers","deleteEmployer","opts","viewModel","Confirm","model","message","open","whenClosed","wasCancelled","delete","Employer","employer","reloadEmployerSubscriber","getEmployerDetails","setParams","setTitle","getPaySchedulesTimeout","clearTimeout","getRtiSubmissionsTimeout","createPaySchedulesTimer","createRtiSubmissionsTimer","getPaySchedules","PaySchedules","getRtiSubmissions","RTITransactions","canAddPayRun","context","Employees","addAPaySchedule","openPayScheduleModal","editPaySchedule","schedule","deletePaySchedule","stringify","output","addAPayCode","openPayCodeModal","editPayCode","payCode","deletePayCode","payCodeId","pension","addAPension","openPensionModal","editPension","defaultPensionForAE","pensionId","patch","deletePension","openPayRunInfoModal","payScheduleId","payRunId","payRun","openAddPayRunModal","nextPayRun","paymentDate","periodStart","periodEnd","openRerunPayRunModal","Instruction","PeriodStart","PeriodEnd","deletePayRun","openAddRtiSubmissionModal","deleteEmployee","BaseViewModel","EmployerForm","validationSetup","showSaveButton","Territory","Region","setupTabEvents","target","deleteRevision","revision","effectiveDate","EffectiveDate","Revisions","rev","Revision","Employee","typesOfPayInstruction","typesOfYTDPayInstruction","getPayInstructionTypes","getEmployeeDetails","Code","reloadEmployeeSubscriber","group","openAddPayInstructionModal","piType","openEditPayInstructionModal","deleteInstruction","payInstructionId","P45PayInstruction","p45payinstruction","add","TaxBasis","StudentLoan","Description","TaxablePay","TaxPaid","TaxCode","LeavingDate","PreviousEmployerPayeRef","employerid","employeeid","p45payinstructionChanged","EmployeeForm","paySchedules","employeeChanged","HoursPerWeek","EmployeePartner","MiddleName","NiNumber","yes","no","cancel","App","configureRouter","map","route","moduleId","addPipelineStep","AuthorizeStep","run","navigationInstruction","next","currentRoute","loginRequired","hasBeenSetup","Redirect","APICalls","calls","toggleAPICallsSubscriber","loadCalls","showCallDetails","call","selectedCall","copyTextToClipboard","$btn","$code","parent","navigator","clipboard","fallbackCopyTextToClipboard","writeText","textarea","document","createElement","textContent","body","appendChild","selection","getSelection","range","createRange","selectNode","removeAllRanges","addRange","removeChild","close"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { HttpClient } from \"aurelia-http-client\";\n\nexport class Welcome {\n    constructor() {\n    }\n\n    activate() {\n        let client = new HttpClient();\n\n        client.get(\"/api/has-been-setup\").then(data => {\n            this.state = JSON.parse(data.response);\n        });\n    }\n\n    deactivate() {\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { Router } from \"aurelia-router\";\n\n@inject(ValidationControllerFactory, Router)\nexport class Setup {\n    constructor(controllerFactory, router) {\n        this.controller = controllerFactory.createForCurrentScope();\n        this.router = router;\n        this.client = new HttpClient();\n    }\n\n    activate() {\n        this.client.get(\"/api/setup\").then(data => {\n            this.state = JSON.parse(data.response);\n            this.environments = [\"Test\", \"Production\"];\n\n            this.setupValidationRules();\n        });\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"ConsumerSecret\").required().withMessage(\"Consumer Secret is required\")\n            .ensure(\"ConsumerKey\").required().withMessage(\"Consumer Key is required\")\n            .ensure(\"Environment\").required().withMessage(\"Environment is required\")\n            .on(this.state);\n    }\n\n    save() {\n        let data = {\n            Environment: this.state.Environment,\n            ConsumerKey: this.state.ConsumerKey,\n            ConsumerSecret: this.state.ConsumerSecret\n        };\n\n        this.controller.validate().then(result => {\n            if (result.valid) {\n                this.client.post(\"/api/setup\", data).then(() => {\n                    this.router.navigate(\"employers\");\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });  \n    }    \n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(DialogController)\nexport class RtiTransactionModal {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n        this.state.PayRun = state.payRuns[0];\n        this.state.LateReason = \"\";\n    }\n\n    save() {\n        let data = {\n            Generate: true,\n            Transmit: true,\n            PayScheduleId: this.state.PayRun.PayScheduleKey,\n            PayRunId: this.state.PayRun.PayRunKey,\n            HoldingDate: this.state.HoldingDate,\n            LateReason: this.state.LateReason\n        };\n\n        this.client.post(`/api/employer/${this.state.employerId}/rtiTransaction`, data).then(res => {\n            let parsedResponse = JSON.parse(res.response);\n\n            this.apiErrors = null;\n            \n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.dialogController.ok(parsedResponse.status);\n        });\n    }\n\n    onLateReasonSelected(newValue) {\n        this.state.LateReason = newValue;\n    }\n}",null,"const moment = require(\"moment\");\n\nexport class ShortDateValueConverter {\n    toView(value) {\n        if (value) {\n            return moment(value).format(\"YYYY-MM-DD\");\n        }\n        \n        return \"\";\n    }\n}","const moment = require(\"moment\");\n\nexport class LongDateTimeValueConverter {\n    toView(value) {\n        if (value) {\n            return moment(value).format(\"YYYY-MM-DD HH:mm:ss\");\n        }\n        \n        return \"\";\n    }\n}","export class FormatSalaryValueConverter {\n    toView(obj) {\n        if (obj) {\n            return parseFloat(obj).toFixed(2);\n        }\n        \n        return \"\";\t\n    }\n}","export class ExtractIdFromLinkValueConverter {\n    toView(obj) {\n        let href = obj[\"@href\"];\n        let parts = href.split(\"/\");\n    \n        return parts[parts.length - 1];\n    }\n}","export class ExtractHrefValueConverter {\n    toView(obj) {\n        return obj[\"@href\"];\t\n    }\n}","export class EmployeeNameValueConverter {\n    toView(employee) {\n        let firstname = employee.FirstName || employee.Initials;\n    \n        let parts = [\n            employee.Title,\n            firstname,\n            employee.LastName\n        ].filter(part => part !== undefined && part !== null && part.trim().length > 0);\n    \n        return parts.join(\" \");\t\t\n    }\n}","export class BankAccountValueConverter {\n    toView(account) {\n        if (account) {\n            let parts = [\n                account.AccountName,\n                account.AccountNumber,\n                account.SortCode\n            ].filter(part => part !== null && part !== undefined && part.trim().length > 0);\n    \n            return parts.join(\"<br />\");\n        }\n    \n        return \"\";\n    }\n}","export class AddressValueConverter {\n    toView(address) {\n        if (address) {\n            let parts = [\n                address.Address1, \n                address.Address2, \n                address.Address3, \n                address.Address4, \n                address.Country, \n                address.Postcode\n            ].filter(part => part !== null && part !== undefined && part.trim().length > 0);\n    \n            return parts.join(\"<br />\");\n        }\n    \n        return \"\";\n    }\n}","export function configure(config) {\n    config.globalResources([\n        \"./value-converters/address\",\n        \"./value-converters/bank-account\",\n        \"./value-converters/employee-name\",\n        \"./value-converters/extract-href\",\n        \"./value-converters/extract-id-from-link\",\n        \"./value-converters/format-salary\",\n        \"./value-converters/long-date-time\",\n        \"./value-converters/short-date\",\n    ]);\n}\n","import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"validation-errors\")\nexport class ValidationErrors {\n    @bindable errors = null;\n\n    errorsChanged() {\n        if (this.errors && this.errors.length > 0) {\n            $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                scrollTop: 0\n            }, 500);\n        }\n    }    \n}",null,"import { inject, bindable, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"status\")\n@inject(EventAggregator)\nexport class Status {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n    }\n\n    @bindable status = null;\n\n    viewJob() {\n        this.ea.publish(\"app:view-job\", this.status.job);\n    }\n\n    statusChanged() {\n        if (this.status) {\n            $(\"#status\").fadeIn();\n            \n            $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                scrollTop: 0\n            }, 500);\n        }\n    }\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"rule-exclusions\")\nexport class RuleExclusions {\n    @bindable ruleexclusions = null;\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport * as nprogress from \"nprogress\";\n\n@customElement(\"router-progress-indicator\")\n@inject(EventAggregator)\nexport class RouterProgressIndicator {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n    }\n        \n    attached() {\n        this.processingSubscriber = this.ea.subscribe(\"router:navigation:processing\", () => {\n            nprogress.start();\n        });\n\n        this.completeSubscriber = this.ea.subscribe(\"router:navigation:complete\", () => {\n            nprogress.done();\n        });        \n    }\n\n    detached() {\n        this.processingSubscriber.dispose();\n        this.completeSubscriber.dispose();\n    }\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"request-indicator\")\n@inject(EventAggregator)\nexport class RequestIndicator {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n    }\n        \n    attached() {\n        this.processingSubscriber = this.ea.subscribe(\"request:processing\", () => {\n            this.visible = true;\n        });\n\n        this.completeSubscriber = this.ea.subscribe(\"request:complete\", () => {\n            this.visible = false;\n        });\n    }\n\n    detached() {\n        this.processingSubscriber.dispose();\n        this.completeSubscriber.dispose();\n    }\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"pay-schedule-dropdown\")\nexport class PayScheduleDropdown {\n    @bindable payschedule = null;\n    @bindable payschedules = null;\n}",null,"import { customElement } from \"aurelia-framework\";\n\n@customElement(\"coming-soon\")\nexport class ComingSoon {\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { Router } from \"aurelia-router\";\n\n@customElement(\"breadcrumbs\")\n@inject(EventAggregator, Router)\nexport class Breadcrumbs {\n    constructor(eventAggregator, router) {\n        this.ea = eventAggregator;\n        this.router = router;\n    }\n\n    attached() {\n        this.navigationSubscriber = this.ea.subscribe(\"router:navigation:success\", () => {\n            this.loadInstructions();\n        });\n\n        this.loadInstructions();\n    }\n\n    detached() {\n        if (this.navigationSubscriber) {\n            this.navigationSubscriber.dispose();\n        }\n    }\n\n    loadInstructions() {\n        let parentInstructions = this.getParentInstructions(this.router.currentInstruction);\n\n        this.instructions = parentInstructions\n            .slice(0, parentInstructions.length - 1)\n            .concat(this.router.currentInstruction.getAllInstructions())\n            .filter(instruction => instruction.config.includeInBreadcrumbs && instruction.config.title);\n    }\n\n    navigateToRoute(instruction) {\n        this.router.navigateToRoute(instruction.config.name, instruction.params);\n    }\n\n    getParentInstructions(instruction) {\n        let arr = [instruction];\n\n        if (!instruction.config.previousInstruction) {\n            return arr;\n        }\n\n        let routes = this.router.routes;\n        let previousInstruction = routes.find(e => e.name === instruction.config.previousInstruction);\n\n        if (!previousInstruction) {\n            return arr;\n        }\n\n        previousInstruction.config = previousInstruction;\n\n        return this.getParentInstructions(previousInstruction).concat(arr);\n    }\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"bank-account-form\")\nexport class BankAccountForm {\n    @bindable bankaccount = null;\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"api-errors\")\nexport class ApiErrors {\n    @bindable errors = null;\n\n    errorsChanged() {\n        if (this.errors) {\n            $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                scrollTop: 0\n            }, 500);\n        }\n    }\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"address-form\")\nexport class AddressForm {\n    @bindable address = null;\n\n    addressChanged() {\n        if (!this.address) {\n            this.address = {};\n        }\n\n        if (!this.address.Country) {\n            this.address.Country = \"United Kingdom\";\n        }\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class PensionModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n\n        this.proRataMethods = [\n            { value: \"NotSet\", text: \"Not set\" },\n            { value: \"Annual260Days\", text: \"Annual 260 days\" },\n            { value: \"Annual365Days\", text: \"Annual 365 days\" },\n            { value: \"AnnualQualifyingDays\", text: \"Annual qualifying days\" },\n            { value: \"DaysPerCalenderMonth\", text: \"Days per calender month\" },\n            { value: \"DaysPerTaxPeriod\", text: \"Days per tax period\" },\n        ];\n\n        this.taxationMethods = [\n            { value: \"NotSet\", text: \"Not set\" },\n            { value: \"NetBased\", text: \"Net based\" },\n            { value: \"ReliefAtSource\", text: \"Relief at source\" }\n        ];\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"SchemeName\").required().withMessage(\"Scheme name is required\")\n            .ensure(\"ProviderName\").required().withMessage(\"Provider name is required\")\n            .ensure(\"ProviderEmployerRef\").required().withMessage(\"Provider employer ref is required\")\n            .ensure(\"EffectiveDate\").required().withMessage(\"Effective date is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.employerId}/pension`, this.state).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class PayScheduleModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n        this.frequencies = [\n            { text: \"Weekly\", value: \"Weekly\" },\n            { text: \"Monthly\", value: \"Monthly\" },\n            { text: \"Two weekly\", value: \"TwoWeekly\" },\n            { text: \"Four weekly\", value: \"FourWeekly\" }\n        ];\n        \n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"Name\").required().withMessage(\"Name is required\")\n            .ensure(\"PayFrequency\").required().withMessage(\"Pay Frequency is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        let data = {\n            Id: this.state.Key,\n            Name: this.state.Name,\n            PayFrequency: this.state.PayFrequency\n        };\n\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.employerId}/paySchedule`, data).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class NewPayRunModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"PayScheduleId\").required().withMessage(\"Pay Schedule is required\")\n            .ensure(\"PaymentDate\").required().withMessage(\"Payment Date is required\")\n            .ensure(\"StartDate\").required().withMessage(\"Pay Period Start is required\")\n            .ensure(\"EndDate\").required().withMessage(\"Pay Period End is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        let data = {\n            PayScheduleId: this.state.PayScheduleId,\n            PaymentDate: this.state.PaymentDate,\n            StartDate: this.state.StartDate,\n            EndDate: this.state.EndDate\n        };\n\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.EmployerId}/payRun`, data).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { Router } from \"aurelia-router\";\n\n@inject(DialogController, Router)\nexport class InfoModal {\n    constructor(dialogController, router) {\n        this.dialogController = dialogController;\n        this.router = router;\n    }\n\n    activate(state) {\n        this.state = state;\n    }\n\n    viewEmployee(employerId, employeeId) {\n        this.router.navigateToRoute(\"employee\", {\n            employerId: employerId,\n            employeeId: employeeId\n        });\n\n        this.dialogController.ok();\n    }\n}",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(DialogController)\nexport class PayInstructionModal {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n\n        return new Promise(resolve => {\n            let apiUrl;\n\n            if (state.id) {\n                apiUrl = `/api/employer/${state.employerId}/employee/${state.employeeId}/payInstruction/${state.id}`;\n            }\n            else {\n                apiUrl = `/api/employer/${state.employerId}/employee/${state.employeeId}/${state.type}`;\n            }\n\n            this.client.get(apiUrl).then(res => {\n                this.pi = JSON.parse(res.response);\n\n                resolve();\n            });\n        });\n    } \n\n    save() {\n        let data = this.pi;\n        let url = `/api/employer/${this.state.employerId}/employee/${this.state.employeeId}/payInstruction`;\n\n        this.client.post(url, data).then(res => {\n            let parsedResponse = JSON.parse(res.response);\n\n            this.apiErrors = null;\n            \n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.dialogController.ok(parsedResponse.status);\n        });\n    }\n\n    getPayInstructionPartial(pi) {\n        if (pi.InstructionType.trim().toLowerCase().indexOf(\"ytd\") != -1) {\n            return `./ytd-pay-instructions/forms/${pi.InstructionType}.html`;\n        }\n\n        return `./pay-instructions/forms/${pi.InstructionType}.html`;\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class PayCodeModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n\n        // this.proRataMethods = [\n        //     { value: \"NotSet\", text: \"Not set\" },\n        //     { value: \"Annual260Days\", text: \"Annual 260 days\" },\n        //     { value: \"Annual365Days\", text: \"Annual 365 days\" },\n        //     { value: \"AnnualQualifyingDays\", text: \"Annual qualifying days\" },\n        //     { value: \"DaysPerCalenderMonth\", text: \"Days per calender month\" },\n        //     { value: \"DaysPerTaxPeriod\", text: \"Days per tax period\" },\n        // ];\n\n        // this.taxationMethods = [\n        //     { value: \"NotSet\", text: \"Not set\" },\n        //     { value: \"NetBased\", text: \"Net based\" },\n        //     { value: \"ReliefAtSource\", text: \"Relief at source\" }\n        // ];\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        // ValidationRules\n        //     .ensure(\"SchemeName\").required().withMessage(\"Scheme name is required\")\n        //     .ensure(\"ProviderName\").required().withMessage(\"Provider name is required\")\n        //     .ensure(\"ProviderEmployerRef\").required().withMessage(\"Provider employer ref is required\")\n        //     .ensure(\"EffectiveDate\").required().withMessage(\"Effective date is required\")\n        //     .on(this.state);        \n    }    \n\n    save() {\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.employerId}/payCode`, this.state).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });\n    }\n}",null,"import { PLATFORM } from \"aurelia-pal\";\nimport environment from \"./environment\";\n\nexport function configure(aurelia) {\n    aurelia.use\n        .standardConfiguration()\n        .plugin(\"aurelia-validation\")\n        .plugin(PLATFORM.moduleName(\"aurelia-dialog\"), config => {\n            config.useDefaults();\n            config.settings.centerHorizontalOnly = true;\n        })\n        .feature(\"resources\");\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin(\"aurelia-testing\");\n    }\n\n    return aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(DialogController)\nexport class JobDetailsModal {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n        this.client = new HttpClient();\n    }\n\n    activate(job) {\n        this.job = job;\n\n        return this.getJobInfo();\n    }\n\n    getJobInfo() {\n        return new Promise((resolve) => {\n            let url = `/api/job/${this.job.id}/${this.job.type}`;\n\n            this.client.get(url).then(data => {\n                this.state = JSON.parse(data.response);\n                \n                window.setTimeout(() => this.getJobInfo(), 500);\n\n                resolve();\n            });\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { Router } from \"aurelia-router\";\n\n@inject(EventAggregator, Router)\nexport class Header {\n    constructor(EventAggregator, router) {\n        this.ea = EventAggregator;\n        this.router = router;\n    }\n\n    attached() {\n        this.showApiCallsButton = this.router.currentInstruction.config.auth;\n    }\n\n    toggleAPICalls() {\n        this.ea.publish(\"toggleAPICalls\");\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { Router } from \"aurelia-router\";\n\n@inject(Router)\nexport class Footer {\n    constructor(router) {\n        this.router = router;\n    }\n\n    attached() {\n        this.showVersionInfo = this.router.currentInstruction.config.auth;\n\n        var GitHubButtons = require(\"github-buttons\");\n\n        GitHubButtons.render();\n\n        return new Promise(resolve => {\n            let client = new HttpClient();\n\n            client.get(\"/api/version\").then(data => {\n                this.state = JSON.parse(data.response);\n\n                resolve();\n            });\n        });\n    }\n}",null,"export default {\n  debug: true,\n  testing: true\n};\n","import { inject } from \"aurelia-framework\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { Confirm } from \"../dialogs/confirm\";\n\n@inject(DialogService, EventAggregator)\nexport class List {\n    constructor(dialogService, eventAggregator) {\n        this.dialogService = dialogService;\n        this.ea = eventAggregator;\n        this.client = new HttpClient();\n    }\n\n    activate() {\n        return this.getEmployers();\n    }\n\n    getEmployers() {\n        return new Promise(resolve => {\n            this.ea.publish(\"request:processing\");\n\n            this.client.get(\"/api/employers\").then(data => {\n                this.ea.publish(\"request:complete\");\n\n                this.employers = JSON.parse(data.response);\n\n                resolve();\n            });            \n        });\n    }\n\n    deleteEmployer(id) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this employer?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {        \n                this.ea.publish(\"request:processing\");\n\n                this.client.delete(`/api/employer/${id}`).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n                    \n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;            \n                    this.getEmployers();\n                });\n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { Router } from \"aurelia-router\";\nimport { PayScheduleModal } from \"../pay-schedule/pay-schedule-modal\";\nimport { PensionModal } from \"../pension/pension-modal\";\nimport { PayCodeModal } from \"../pension/pension-modal\";\nimport { InfoModal } from \"../pay-run/info-modal\";\nimport { NewPayRunModal } from \"../pay-run/new-pay-run-modal\";\nimport { RtiTransactionModal } from \"../rti-transaction/rti-transaction-modal\";\nimport { Confirm } from \"../dialogs/confirm\";\nimport { BaseViewModel } from \"../base-view-model\";\n\n@inject(EventAggregator, DialogService, Router)\nexport class Employer extends BaseViewModel {\n    constructor(eventAggregator, dialogService, router) {\n        super(router);\n\n        this.employer = null;\n        this.ea = eventAggregator;\n        this.dialogService = dialogService;\n        this.client = new HttpClient();\n    }\n\n    activate(params) {\n        this.params = params;\n\n        this.reloadEmployerSubscriber = this.ea.subscribe(\"employer:reload\", state => {\n            this.getEmployerDetails(state.employerId);\n        });\n\n        $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n            scrollTop: 0\n        }, 100);\n\n        if (params && params.id) {\n            return this.getEmployerDetails(params.id);\n        }\n    }\n\n    attached() {\n        super.setParams(this.params);\n        \n        if (this.employer) {\n            super.setTitle(this.employer.Name);\n        }\n        else {\n            super.setTitle(\"New Employer\");\n        }\n    }\n\n    deactivate() {\n        if (this.reloadEmployerSubscriber) {\n            this.reloadEmployerSubscriber.dispose();\n        }\n\n        if (this.getPaySchedulesTimeout) {\n            window.clearTimeout(this.getPaySchedulesTimeout);\n        }\n\n        if (this.getRtiSubmissionsTimeout) {\n            window.clearTimeout(this.getRtiSubmissionsTimeout);\n        }\n    }    \n\n    getEmployerDetails(employerId) {\n        return new Promise((resolve) => {\n            this.ea.publish(\"request:processing\");\n\n            this.client.get(`/api/employer/${employerId}`).then(data => {\n                this.ea.publish(\"request:complete\");\n\n                this.employer = JSON.parse(data.response);\n\n                this.createPaySchedulesTimer();\n                this.createRtiSubmissionsTimer();\n\n                resolve();\n            });\n        });\n    }\n\n    getPaySchedules() {\n        this.ea.publish(\"request:processing\");\n\n        this.client.get(`/api/employer/${this.employer.Id}/pay-schedules`).then(data => {\n            this.ea.publish(\"request:complete\");\n\n            this.employer.PaySchedules = JSON.parse(data.response);\n\n            this.createPaySchedulesTimer();\n        });\n    }\n\n    createPaySchedulesTimer() {\n        this.getPaySchedulesTimeout = window.setTimeout(() => this.getPaySchedules(), 15000);\n    }\n\n    getRtiSubmissions() {\n        this.ea.publish(\"request:processing\");\n\n        this.client.get(`/api/employer/${this.employer.Id}/rti-submissions`).then(data => {\n            this.ea.publish(\"request:complete\");\n\n            this.employer.RTITransactions = JSON.parse(data.response);\n\n            this.createRtiSubmissionsTimer();\n        });\n    }\n\n    createRtiSubmissionsTimer() {\n        this.getRtiSubmissionsTimeout = window.setTimeout(() => this.getRtiSubmissions(), 15000);\n    }\n\n    canAddPayRun(context) {\n        return context.Employees.length > 0 && context.PaySchedules && context.PaySchedules.length > 0;\n    }\n\n    addAPaySchedule() {\n        this.openPayScheduleModal({});\n    }\n\n    editPaySchedule(schedule) {\n        this.openPayScheduleModal(schedule);\n    }\n\n    deletePaySchedule(schedule) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this pay schedule?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.ea.publish(\"request:processing\");\n\n                this.client.post(`/api/employer/${this.employer.Id}/paySchedule/${schedule.Key}/delete/`).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;\n                    this.getEmployerDetails(this.employer.Id);\n                });\n            }\n        });\n    }\n\n    openPayScheduleModal(schedule) {\n        schedule.employerId = this.employer.Id;\n        \n        let opts = {\n            viewModel: PayScheduleModal,\n            model: JSON.parse(JSON.stringify(schedule))\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });\n    }\n\n    addAPayCode() {\n        this.openPayCodeModal({});\n    }\n\n    editPayCode(payCode) {\n        this.openPayCodeModal(payCode);\n    }\n\n    deletePayCode(employerId, payCodeId) {\n        this.ea.publish(\"request:processing\");\n\n        this.client.delete(`/api/employer/${employerId}/payCode/${payCodeId}`).then(res => {\n            this.ea.publish(\"request:complete\");\n\n            let parsedResponse = JSON.parse(res.response);\n\n            this.apiErrors = null;\n            this.status = null;\n\n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.status = parsedResponse.status;\n            this.getEmployerDetails(employerId);\n        });\n    }\n\n    openPayCodeModal(payCode) {\n        pension.employerId = this.employer.Id;\n        \n        let opts = {\n            viewModel: PayCodeModal,\n            model: JSON.parse(JSON.stringify(payCode))\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });        \n    }\n\n    addAPension() {\n        this.openPensionModal({});\n    }\n\n    editPension(pension) {\n        this.openPensionModal(pension);\n    }\n\n    defaultPensionForAE(employerId, pensionId) {\n        this.ea.publish(\"request:processing\");\n\n        this.client.patch(`/api/employer/${employerId}/pension/${pensionId}`).then(res => {\n            this.ea.publish(\"request:complete\");\n\n            let parsedResponse = JSON.parse(res.response);\n\n            this.apiErrors = null;\n            this.status = null;\n\n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.status = parsedResponse.status;\n            this.getEmployerDetails(employerId);\n        });        \n    }\n\n    deletePension(employerId, pensionId) {\n        this.ea.publish(\"request:processing\");\n\n        this.client.delete(`/api/employer/${employerId}/pension/${pensionId}`).then(res => {\n            this.ea.publish(\"request:complete\");\n\n            let parsedResponse = JSON.parse(res.response);\n\n            this.apiErrors = null;\n            this.status = null;\n\n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.status = parsedResponse.status;\n            this.getEmployerDetails(employerId);\n        });\n    }\n\n    openPensionModal(pension) {\n        pension.employerId = this.employer.Id;\n        \n        let opts = {\n            viewModel: PensionModal,\n            model: JSON.parse(JSON.stringify(pension))\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });\n    }\n\n    openPayRunInfoModal(employerId, payScheduleId, payRunId) {\n        let url = `api/employer/${employerId}/paySchedule/${payScheduleId}/payRun/${payRunId}`;\n        \n        this.ea.publish(\"request:processing\");\n\n        this.client.get(url).then(res => {\n            this.ea.publish(\"request:complete\");\n\n            let payRun = JSON.parse(res.response);\n\n            payRun.EmployerId = this.employer.Id;\n\n            let opts = {\n                viewModel: InfoModal,\n                model: payRun\n            };\n    \n            this.dialogService.open(opts);\n        });\n    }\n\n    openAddPayRunModal(employerId, payScheduleId) {\n        let url = `/api/employer/${employerId}/paySchedule/${payScheduleId}/next-pay-run`;\n        \n        this.ea.publish(\"request:processing\");\n\n        this.client.get(url).then(res => {\n            this.ea.publish(\"request:complete\");\n\n            let nextPayRun = JSON.parse(res.response);\n            \n            let state = {\n                Title: \"Create PayRun\",\n                EmployerId: employerId,\n                PayScheduleId: payScheduleId,\n                PaymentDate: nextPayRun.paymentDate,\n                StartDate: nextPayRun.periodStart,\n                EndDate: nextPayRun.periodEnd,\n                PaySchedules: []\n            };\n            \n            let opts = {\n                viewModel: NewPayRunModal,\n                model: state\n            };\n\n            this.dialogService.open(opts).whenClosed(response => {\n                if (!response.wasCancelled) {\n                    this.status = response.output;\n\n                    this.getEmployerDetails(this.employer.Id);\n                }\n            });\n        });        \n    }\n\n    openRerunPayRunModal(employerId, payScheduleId, payRun) {\n        let state = {\n            Title: \"Rerun PayRun\",\n            Instruction: \"Re-running will delete the previous run.\",\n            EmployerId: employerId,\n            PayScheduleId: payScheduleId,\n            PaymentDate: payRun.PaymentDate,\n            StartDate: payRun.PeriodStart,\n            EndDate: payRun.PeriodEnd,\n            PaySchedules: []\n        };\n        \n        let opts = {\n            viewModel: NewPayRunModal,\n            model: state\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });        \n    }\n\n    deletePayRun(employerId, payScheduleId, payRunId) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this pay run?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.ea.publish(\"request:processing\");\n\n                this.client.delete(`/api/employer/${employerId}/paySchedule/${payScheduleId}/payRun/${payRunId}`).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n        \n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n        \n                    this.status = parsedResponse.status;\n                    this.getEmployerDetails(employerId);\n                });\n            }\n        });\n    }\n\n    openAddRtiSubmissionModal(employerId) {\n        this.ea.publish(\"request:processing\");\n\n        this.client.get(`/api/employer/${employerId}/payRuns`).then(res => {\n            this.ea.publish(\"request:complete\");\n\n            let payRuns = JSON.parse(res.response);\n\n            let opts = {\n                viewModel: RtiTransactionModal,\n                model: {\n                    employerId: employerId,\n                    payRuns: payRuns\n                }\n            };\n    \n            this.dialogService.open(opts).whenClosed(response => {\n                if (!response.wasCancelled) {\n                    this.status = response.output;\n    \n                    this.getEmployerDetails(this.employer.Id);\n                }\n            });\n        }); \n    }\n\n    deleteEmployee(employerId, employeeId) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this employee?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.ea.publish(\"request:processing\");\n\n                this.client.delete(`/api/employer/${employerId}/employee/${employeeId}`).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n        \n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n        \n                    this.status = parsedResponse.status;\n                    this.getEmployerDetails(employerId);\n                });\n            }\n        });        \n    }\n}",null,"import { bindable, inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { Confirm } from \"../dialogs/confirm\";\n\n@customElement(\"employer-form\")\n@inject(EventAggregator, ValidationControllerFactory, DialogService)\nexport class EmployerForm {\n    constructor(EventAggregator, controllerFactory, dialogService) {\n        this.validationSetup = false;\n\n        this.ea = EventAggregator;\n        this.client = new HttpClient();\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.showSaveButton = true;\n    }\n\n    @bindable employer = null;\n\n    attached() {\n        if (!this.employer) {\n            this.employer = {\n                Territory: \"UnitedKingdom\",\n                Region: \"NotSet\",\n\n            };\n        }\n\n        this.setupTabEvents();\n        this.setupValidationRules();        \n    }\n\n    detached() {\n    }\n\n    save() {\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.ea.publish(\"request:processing\");\n\n                this.client.post(\"/api/Employer\", this.employer).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;\n\n                    this.ea.publish(\"employer:reload\", {\n                        employerId: parsedResponse.employerId\n                    });\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });\n    }\n\n    setupTabEvents() {\n        $(\"a[data-toggle='tab']\").on(\"shown.bs.tab\", (e) => {\n            this.showSaveButton = e.target.id !== \"revisions-tab\";\n        });        \n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"Name\").required().withMessage(\"Details > Name is required\")\n            .ensure(\"EffectiveDate\").required().withMessage(\"Details > Effective date is required\")\n            .on(this.employer); \n    }    \n\n    deleteRevision(revision) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this revision?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                let employerId = this.employer.Id;\n                let effectiveDate = revision.EffectiveDate;\n                let url = `/api/employer/${employerId}/revision/${effectiveDate}`;\n                \n                this.ea.publish(\"request:processing\");\n\n                this.client.delete(url).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;\n                    this.employer.Revisions = this.employer.Revisions.filter(rev => rev.Revision !== revision.Revision);\n\n                    this.ea.publish(\"employer:reload\", { employerId: employerId });\n                });                \n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { Router } from \"aurelia-router\";\nimport { Confirm } from \"../dialogs/confirm\";\nimport { PayInstructionModal } from \"../pay-instruction/pay-instruction-modal\";\nimport { BaseViewModel } from \"../base-view-model\";\n\n@inject(EventAggregator, DialogService, Router)\nexport class Employee extends BaseViewModel {\n    constructor(eventAggregator, dialogService, router) {\n        super(router);\n\n        this.employee = null;\n        this.ea = eventAggregator;\n        this.dialogService = dialogService;\n        this.client = new HttpClient();\n\n        this.typesOfPayInstruction = [\n            \"AoePayInstruction\", \n            \"BenefitPayInstruction\", \n            \"NiAdjustmentPayInstruction\", \n            \"NiPayInstruction\", \n            \"PensionPayInstruction\", \n            \"PrimitivePayInstruction\", \n            \"RatePayInstruction\", \n            \"SalaryPayInstruction\",\n            \"ShppPayInstruction\",\n            \"SspPayInstruction\",\n            \"StudentLoanPayInstruction\",\n            \"TaxPayInstruction\"\n        ];\n\n        this.typesOfYTDPayInstruction = [\n            \"NiYtdPayInstruction\", \n            \"PensionYtdPayInstruction\", \n            \"PrimitiveYtdPayInstruction\", \n            \"SapYtdPayInstruction\", \n            \"ShppYtdPayInstruction\", \n            \"SmpYtdPayInstruction\", \n            \"SppYtdPayInstruction\", \n            \"SspYtdPayInstruction\",\n            \"StudentLoanYtdPayInstruction\",\n            \"TaxYtdPayInstruction\"\n        ];        \n    }\n\n    activate(params) {\n        this.getPayInstructionTypes();\n\n        $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n            scrollTop: 0\n        }, 100);\n\n        if (params && params.employerId && params.employeeId) {\n            return this.getEmployeeDetails(params.employerId, params.employeeId);\n        }\n        else {\n            this.employee = {\n                EmployerId: params.employerId\n            };\n        }\n    }\n\n    attached() {\n        if (this.employee) {\n            super.setTitle(this.employee.Code);\n        }\n        else {\n            super.setTitle(\"New Employee\");\n        }\n    }\n    \n    deactivate() {\n        if (this.reloadEmployeeSubscriber) {\n            this.reloadEmployeeSubscriber.dispose();\n        }\n    }\n\n    getEmployeeDetails(employerId, employeeId) {\n        return new Promise(resolve => {\n            this.ea.publish(\"request:processing\");\n\n            this.client.get(`/api/employer/${employerId}/employee/${employeeId}`).then(res => {\n                this.ea.publish(\"request:complete\");\n\n                this.employee = JSON.parse(res.response);\n                \n                this.employee.EmployerId = employerId;\n\n                resolve();\n            });\n        });\n    }\n\n    getPayInstructionTypes() {\n        return new Promise(resolve => {\n            this.ea.publish(\"request:processing\");\n\n            this.client.get(\"/api/pay-instructions\").then(res => {\n                this.ea.publish(\"request:complete\");\n\n                let response = JSON.parse(res.response);\n\n                this.typesOfPayInstruction = response.filter(pi => pi.group === \"normal\");\n                this.typesOfYTDPayInstruction = response.filter(pi => pi.group === \"year-to-date\");\n\n                resolve();\n            });\n        });\n    }\n\n    openAddPayInstructionModal(piType) {\n        let employerId = this.employee.EmployerId;\n        let employeeId = this.employee.Id;\n        let opts = {\n            viewModel: PayInstructionModal,\n            model: {\n                type: piType,\n                employerId: employerId,\n                employeeId: employeeId\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n                \n                this.getEmployeeDetails(employerId, employeeId);\n            }\n        });\n    }\n\n    openEditPayInstructionModal(pi) {\n        let employerId = this.employee.EmployerId;\n        let employeeId = this.employee.Id;        \n        let opts = {\n            viewModel: PayInstructionModal,\n            model: {\n                id: pi.Id,\n                employerId: employerId,\n                employeeId: employeeId\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployeeDetails(employerId, employeeId);\n            }\n        });        \n    }\n\n    deleteInstruction(pi) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this pay instruction?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                let employerId = this.employee.EmployerId;\n                let employeeId = this.employee.Id;\n                let payInstructionId = pi.Id;\n                let url = `/api/employer/${employerId}/employee/${employeeId}/payInstruction/${payInstructionId}`;\n                \n                this.ea.publish(\"request:processing\");\n\n                this.client.delete(url).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;\n                    this.getEmployeeDetails(employerId, employeeId);\n                });\n            }\n        });\n    }\n}",null,"import { bindable, inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { Confirm } from \"../../dialogs/confirm\";\n\n@customElement(\"p45-pay-instruction\")\n@inject(EventAggregator, ValidationControllerFactory, DialogService)\nexport class P45PayInstruction {\n    constructor(EventAggregator, controllerFactory, dialogService) {\n        this.ea = EventAggregator;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.client = new HttpClient();\n    }\n\n    @bindable employerid = null;\n    @bindable employeeid = null;\n    @bindable p45payinstruction = null;\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"StartDate\").required().withMessage(\"Start date is required\")\n            .ensure(\"TaxablePay\").required().withMessage(\"Taxable pay is required\")\n            .ensure(\"TaxPaid\").required().withMessage(\"Tax paid is required\")\n            .ensure(\"TaxCode\").required().withMessage(\"Tax code is required\")\n            .ensure(\"LeavingDate\").required().withMessage(\"Leaving date is required\")\n            .on(this.p45payinstruction);        \n    }\n\n    add() {\n        this.p45payinstruction = {\n            TaxBasis: \"Cumulative\",\n            StudentLoan: \"Off\",\n            PayFrequency: \"Weekly\"\n        };\n    }\n\n    save() {\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                let data = {\n                    StartDate: this.p45payinstruction.StartDate,\n                    EndDate: this.p45payinstruction.EndDate,\n                    Description: this.p45payinstruction.Description,                    \n                    TaxablePay: this.p45payinstruction.TaxablePay,\n                    TaxPaid: this.p45payinstruction.TaxPaid,\n                    TaxCode: this.p45payinstruction.TaxCode,\n                    TaxBasis: this.p45payinstruction.TaxBasis,\n                    StudentLoan: this.p45payinstruction.StudentLoan,\n                    PayFrequency: this.p45payinstruction.PayFrequency,\n                    LeavingDate: this.p45payinstruction.LeavingDate,\n                    PreviousEmployerPayeRef: this.p45payinstruction.PreviousEmployerPayeRef\n                };\n                let url = `/api/employer/${this.employerid}/Employee/${this.employeeid}/P45Instruction`;\n\n                this.ea.publish(\"request:processing\");\n\n                this.client.post(url, data).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });\n    }\n\n    delete() {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this pay instruction?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                let employerId = this.employerid;\n                let employeeId = this.employeeid;\n                let payInstructionId = this.p45payinstruction.Id;\n                let url = `/api/employer/${employerId}/employee/${employeeId}/payInstruction/${payInstructionId}`;\n                \n                this.ea.publish(\"request:processing\");\n\n                this.client.delete(url).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.p45payinstruction = null;\n                    this.status = parsedResponse.status;\n                });\n            }\n        });\n    }\n\n    p45payinstructionChanged() {\n        if (this.p45payinstruction) {\n            this.setupValidationRules();\n        }\n    }\n}",null,"import { bindable, inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { Confirm } from \"../../dialogs/confirm\";\n\n@customElement(\"employee-form\")\n@inject(EventAggregator, ValidationControllerFactory, DialogService)\nexport class EmployeeForm {\n    constructor(EventAggregator, controllerFactory, dialogService) {\n        this.ea = EventAggregator;\n        this.paySchedules = null;\n        this.client = new HttpClient();\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.showSaveButton = true;\n    }\n\n    @bindable employee = null;\n\n    attached() {\n        this.setupTabEvents();\n        this.setupValidationRules();        \n    }\n\n    detached() {\n    }\n\n    save() {\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                let url = `/api/employer/${this.employee.EmployerId}/employee`;\n                let data = this.employee;\n\n                this.ea.publish(\"request:processing\");\n\n                this.client.post(url, data).then(res => {\n                    this.ea.publish(\"request:complete\");\n\n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;\n                    this.employee.Id = parsedResponse.employeeId;\n\n                    this.ea.publish(\"employee:reload\", {\n                        employerId: this.employee.EmployerId,\n                        employeeId: parsedResponse.employeeId\n                    });\n                });\n            }\n            else {\n                $(\"html, body, ux-dialog-container, ux-dialog, ux-dialog-body\").animate({\n                    scrollTop: 0\n                }, 500);                \n            }\n        });\n    }\n\n    employeeChanged() {\n        if (!this.employee.HoursPerWeek) {\n            this.employee.HoursPerWeek = 40;\n        }\n\n        if (!this.employee.EmployeePartner) {\n            this.employee.EmployeePartner = {\n                Title: \"\",\n                FirstName: \"\",\n                Initials: \"\",\n                MiddleName: \"\",\n                LastName: \"\",\n                NiNumber: \"\"\n            };\n        }\n\n        if (!this.paySchedules) {            \n            let employerId = this.employee.EmployerId;\n\n            this.ea.publish(\"request:processing\");\n\n            this.client.get(`/api/employer/${employerId}/pay-schedules`).then(res => {\n                this.ea.publish(\"request:complete\");\n\n                this.paySchedules = JSON.parse(res.response);\n            });\n        }       \n    }\n\n    setupTabEvents() {\n        $(\"a[data-toggle='tab']\").on(\"shown.bs.tab\", (e) => {\n            this.showSaveButton = e.target.id !== \"revisions-tab\";\n        });        \n    }    \n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"LastName\").required().withMessage(\"Last name is required\")\n            .ensure(\"Code\").required().withMessage(\"Code is required\")\n            .ensure(\"EffectiveDate\").required().withMessage(\"Effective date is required\")\n            .ensure(\"DateOfBirth\").required().withMessage(\"Date of birth is required\")\n            .ensure(\"Gender\").required().withMessage(\"Gender is required\")\n            .ensure(\"StarterDeclaration\").required().withMessage(\"Starter declaration is required\")\n            .ensure(\"Territory\").required().withMessage(\"Territory is required\")\n            .ensure(\"Region\").required().withMessage(\"Region is required\")\n            .ensure(\"HoursPerWeek\").required().withMessage(\"Hours per week is required\")\n            .ensure(\"AEAssessmentOverride\").required().withMessage(\"AEAssessment override is required\")\n            .on(this.employee); \n    }\n\n    deleteRevision(revision) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this revision?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                let employerId = this.employee.EmployerId;\n                let employeeId = this.employee.Id;\n                let effectiveDate = revision.EffectiveDate;\n                let url = `/api/employer/${employerId}/employee/${employeeId}/revision/${effectiveDate}`;\n                \n                this.ea.publish(\"request:processing\");\n\n                this.client.delete(url).then(res => {\n                    this.ea.publish(\"request:complete\");\n                    \n                    let parsedResponse = JSON.parse(res.response);\n\n                    this.apiErrors = null;\n                    this.status = null;\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.status = parsedResponse.status;\n                    this.employer.Revisions = this.employee.Revisions.filter(rev => rev.Revision !== revision.Revision);\n\n                    this.ea.publish(\"employee:reload\", {\n                        employerId: employerId,\n                        employeeId: employeeId\n                    });                \n                });                \n            }\n        });\n    }    \n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\n\n@inject(DialogController)\nexport class Confirm {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n    }\n\n    activate(state) {\n        this.state = state;\n    }\n\n    yes() {\n        this.dialogController.ok();\n    }\n\n    no() {\n        this.dialogController.cancel();\n    }\n}",null,"export class BaseViewModel {\n    constructor(router) {\n        this.router = router;\n    }\n\n    setTitle(title) {\n        this.router.currentInstruction.config.title = title;\n    }\n\n    setParams(params) {\n        this.router.currentInstruction.config.params = params;\n    }\n}","import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { JobDetailsModal } from \"job/job-details-modal\";\nimport { PLATFORM } from \"aurelia-pal\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { Redirect } from \"aurelia-router\";\n\n@inject(EventAggregator, DialogService)\nexport class App {\n    constructor(eventAggregator, dialogService) {\n        this.ea = eventAggregator;\n        this.dialogService = dialogService;\n    }\n\n    activate() {\n        this.ea.subscribe(\"app:view-job\", job => {\n            let opts = {\n                viewModel: JobDetailsModal,\n                model: job\n            };\n    \n            this.dialogService.open(opts);\n        });\n    }\n\n    configureRouter(config, router) {\n        config.title = \"PayRun.io Demo\";\n\n        config.map([\n            { \n                name: \"get-started\",\n                route: \"\",\n                moduleId: PLATFORM.moduleName(\"welcome/welcome\"),\n                title: \"Get started\",\n                auth: false,\n                includeInBreadcrumbs: true\n            },\n            { \n                name: \"setup\",\n                route: \"setup\",\n                moduleId: PLATFORM.moduleName(\"welcome/setup\"),\n                title: \"Setup\",\n                auth: false,\n                previousInstruction: \"get-started\"\n            },            \n            { \n                name: \"employers\",\n                route: \"employers\",\n                moduleId: PLATFORM.moduleName(\"employer/list\"),\n                title: \"Employers\",\n                auth: true,\n                includeInBreadcrumbs: true,\n                previousInstruction: \"get-started\"\n            },\n            { \n                name: \"employer\",\n                route: \"employer/:id?\",\n                moduleId: PLATFORM.moduleName(\"employer/employer\"),\n                title: \"Employer\",\n                auth: true,\n                includeInBreadcrumbs: true,\n                previousInstruction: \"employers\"\n            },\n            { \n                name: \"employee\",\n                route: \"employer/:employerId/employee/:employeeId?\",\n                moduleId: PLATFORM.moduleName(\"employee/employee\"),\n                title: \"Employee\",\n                auth: true,\n                includeInBreadcrumbs: true,\n                previousInstruction: \"employer\"\n            }\n        ]);\n\n        config.addPipelineStep(\"authorize\", AuthorizeStep);\n\n        this.router = router;\n    }\n}\n\nclass AuthorizeStep {\n    run(navigationInstruction, next) {\n        return new Promise(resolve => {\n            let client = new HttpClient();\n\n            client.get(\"/api/has-been-setup\").then(res => {\n                let parsedResponse = JSON.parse(res.response);\n                let currentRoute = navigationInstruction.config;\n                let loginRequired = currentRoute.auth && currentRoute.auth === true;\n\n                if (!parsedResponse.hasBeenSetup && loginRequired) {\n                    return resolve(next.cancel(new Redirect(\"setup\")));\n                }\n\n                return resolve(next());\n            });\n        });\n    }\n}\n",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@customElement(\"api-calls\")\n@inject(EventAggregator)\nexport class APICalls {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n        this.calls = [];\n        this.client = new HttpClient();\n    }\n\n    attached() {\n        this.toggleAPICallsSubscriber = this.ea.subscribe(\"toggleAPICalls\", () => {\n            this.visible = !this.visible;\n        });\n\n        this.loadCalls();\n    }\n\n    loadCalls() {\n        this.client.get(\"/api/api-calls\").then(res => {\n            let response = res.response;\n\n            if (response === \"\") {\n                return;\n            }\n\n            let calls = JSON.parse(response);\n    \n            if (this.calls.length !== calls.length) {\n                this.calls = calls;\n            }\n    \n            window.setTimeout(() => {\n                this.loadCalls();\n            }, 1500);\n        });        \n    }\n\n    showCallDetails(call) {\n        this.selectedCall = call;\n\n        $(\".api-calls-container\").animate({ scrollTop: 0 }, 500);\n    }\n\n    copyTextToClipboard(e) {\n        let $btn = $(e.target);\n        let $code = $btn.parent().find(\"code\");\n        let text = $code.text();\n\n        if (!navigator.clipboard) {\n            this.fallbackCopyTextToClipboard(text);\n            return;\n        }\n    \n        navigator.clipboard.writeText(text).then(() => { }, () => {\n            this.fallbackCopyTextToClipboard(text);\n        });\n    }\n    \n    fallbackCopyTextToClipboard(text) {\n        let textarea = document.createElement(\"textarea\");\n        \n        textarea.textContent = text;\n        document.body.appendChild(textarea);\n      \n        let selection = document.getSelection();\n        let range = document.createRange();\n    \n        range.selectNode(textarea);\n        selection.removeAllRanges();\n        selection.addRange(range);\n              \n        selection.removeAllRanges();\n      \n        document.body.removeChild(textarea);\n    }\n\n    detached() {\n        this.toggleAPICallsSubscriber.dispose();\n    }\n\n    close() {\n        this.visible = false;\n    }\n}",null],"sourceRoot":"../.."}